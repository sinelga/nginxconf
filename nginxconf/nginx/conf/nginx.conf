


worker_processes  4;


events {
    	worker_connections  1024;
	multi_accept on;
}


http {
    include       mime.types;
    default_type  application/octet-stream;


	log_format main '$remote_addr - $remote_user [$time_local] ' '$host "$request" $status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"';
   	access_log logs/access.log main;

    	sendfile        on;
    	keepalive_timeout  65;
		tcp_nopush on;
		tcp_nodelay on;
		types_hash_max_size 2048;
		server_tokens off;


#        fastcgi_cache_path /opt/nginx/cache levels=1:2 keys_zone=GOFAST:200m inactive=1m;
#        fastcgi_cache_key "$bot$mobile$scheme$request_method$host$request_uri";
#        add_header X-Cache $upstream_cache_status;

	gzip_static  on;	
#	gzip on;
#        gzip_buffers 16 8k;
#        gzip_comp_level 6;
#        gzip_http_version 1.1;
#        gzip_min_length 10;
#        gzip_types text/plain text/css image/png image/gif image/jpeg application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript im$
#        gzip_vary on;
#        gzip_proxied any;
#        gzip_disable "MSIE [1-6]\.(?!.*SV1)";

#	proxy_connect_timeout 90;
#        proxy_send_timeout 90;
#        proxy_read_timeout 90;
#        proxy_buffer_size 4k;
#        proxy_buffers 4 32k;
#        proxy_busy_buffers_size 64k;
#        proxy_temp_file_write_size 64k;
    	
      map $host $weblocale {
                hostnames;
                default fi_FI;
                include /opt/nginx/conf/weblocale.txt;
        }

       map $host $webthemes {
                hostnames;
                default finance;
                include /opt/nginx/conf/webthemes.txt;
        }


#	lua_package_path "/opt/lua-resty-redis/lib/?.lua;;";


    server {
        listen       80;
        server_name  localhost;
	include fastcgi_params;


#  location /redis {
#
#                fastcgi_pass    127.0.0.1:8010;
#                break;
#
#
#        }

        location / {

                resolver 8.8.8.8;

                location /robots.txt { alias /home/juno/git/goFastCgi/goFastCgi/robots.txt; }
                location /favicon.ico { alias  /home/juno/git/goFastCgi/goFastCgi/finance_favicon.ico; }
                location /crossdomain.xml { return 404; }
                location /sitemap.xml { return 404;}

                if ($http_user_agent ~* (linkdex|mail.ru|sistrix|exabot|360spider|ncbot|facebookexternalhit|siteexplorer|linguee|spyder|garlikcrawler|pagesinventory|gimme60|zend_http_client|xenu|pycrawler|spider|searchmetricsbot|solomonobot|seznambot|mnogosearch|yeti|ia_archiver|backlinkcrawler|wotbox|mail.ru_bot|turnitinbot|aesop_com_spiderman|ahrefsbot|alexibot|backweb|bandit|batchftp|baiduspider|bigfoot|black.?hole|blackwidow|blowfish|botalot|buddy|builtbottough|bullseye|cheesebot|cherrypicker|chinaclaw|collector|copier|copyrightcheck|cosmos|crescent|curl|custo|da|diibot|disco|dittospyder|dragonfly|drip|easydl|ebingbong|ecatch|eirgrabber|exabot|ezooms|influencebot|mj12bot|netcraftsurveyagent|openindex|seokicks-robot|sistrix|sogou|sosospider|yandexbot|yandeximages|yandexmetrika)) {

					return 410;

				}

                set $bot 0;
                set $mobile 0;
		set $rootdir  /home/juno/git/nginxbancario/nginxbancario/dartapp/build/web/;

               if ($http_user_agent ~* googlebot|adsbot-google-mobile|msn|bing|msnbot-media|slurp) {
                        set $bot 1;
			root /home/juno/git/goFastCgiLight/goFastCgiLight/www/fi_FI/porno/$http_host;
				
                }


                if ($http_user_agent ~* (android|symbian|ipad|iphone|nokia|wpdesktop)) {
                        set $mobile 1;
			set $rootdir /home/juno/git/nginxbancario_mob/nginxbancario_mob/dartapp/build/web/;
			#set $rootdir /home/juno/junoworkspace/dartapp/build/web/;
			#set $rootdir /home/juno/git/nginxbancario/nginxbancario/dartapp/build/web/;
                }


                error_page     404 = @proxytoapp;
                log_not_found  off;
                error_page     403 = @proxytoapp;

        }


 		location @proxytoapp {

                fastcgi_pass    127.0.0.1:8000;
#                fastcgi_cache   GOFAST;
#                fastcgi_cache_valid 200 1m;

        }

#	 location /inline_concat {
#            # MIME type determined by default_type:
#            default_type 'text/plain';
 
#            set $a "hello";
#            set $b "world";
#            # inline Lua script
#            set_by_lua $res "return ngx.arg[1]..ngx.arg[2]" $a $b;
#            echo $res;
#        }


#	  location /rel_file_concat {
#            set $a "foo";
#            set $b "bar";
            # script path relative to nginx prefix
            # $ngx_prefix/conf/concat.lua contents:
            #
            #    return ngx.arg[1]..ngx.arg[2]
            #
#            set_by_lua_file $res conf/concat.lua $a $b;
#            echo $res;
#        }


# 	location /lua_content {
#            # MIME type determined by default_type:
#            default_type 'text/plain';
# 
#            content_by_lua "ngx.say('Hello,world!')";
#        }


#	location /test {
#
#		default_type 'text/plain';
#		content_by_lua '
#		local redis = require "resty.redis"
#                local red = redis:new()	
#		
#		red:set_timeout(1000)
#
#		local ok, err = red:connect("127.0.0.1", 6379)
#                if not ok then
#                    ngx.say("failed to connect: ", err)
#                    return
#                end
#
#                ok, err = red:set("dog", "an animal")
#                if not ok then
#                    ngx.say("failed to set dog: ", err)
#                    return
#                end
#		ngx.say("set result: ", ok)
#
#  		local res, err = red:get("dog")
#                if not res then
#                    ngx.say("failed to get dog: ", err)
#                    return
#                end
#
#                if res == ngx.null then
#                    ngx.say("dog not found.")
#                    return
#                end
#
#                ngx.say("dog: ", res)
#
#		';
#		
#	}	


    }

#	include HttpImageFilterModule.conf;



}
